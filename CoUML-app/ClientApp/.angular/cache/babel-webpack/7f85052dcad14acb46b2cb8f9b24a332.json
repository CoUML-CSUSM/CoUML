{"ast":null,"code":"import { CoUmlHubService } from \"../service/couml-hub.service\";\nimport * as Automerge from 'automerge';\nimport { Diagram, DiagramBuilder } from 'src/models/DiagramModel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/couml-hub.service\";\nexport let ProjectDeveloper = /*#__PURE__*/(() => {\n  class ProjectDeveloper {\n    constructor(_CoUmlHub) {\n      this._CoUmlHub = _CoUmlHub;\n    }\n\n    open(id) {\n      this._CoUmlHub.fetch(id) //get diagram from server\n      .then(d => {\n        this._CoUmlHub.subscribe(this);\n\n        console.log(d);\n        this.projectDiagram = new DiagramBuilder().buildDiagram(d);\n        this.am_diagram = Automerge.from(this.projectDiagram);\n        console.log(this.projectDiagram);\n        console.log(`Automerge Diagram\\n${this.describe()}`);\n      }); // create AMDiagram from diagram \n\n    }\n\n    close() {//TODO: close the project and remove yourself from the group\n    }\n\n    makeChange(diagram) {\n      let newDiagram = Automerge.from(diagram);\n      let changes = Automerge.getChanges(this.am_diagram, newDiagram);\n      this.am_diagram = newDiagram;\n\n      this._CoUmlHub.commit(changes);\n\n      this.describe();\n    }\n\n    applyChange(diagram) {\n      [this.am_diagram, this.recentPatch] = Automerge.applyChanges(this.am_diagram, diagram);\n      /* log */\n\n      this._CoUmlHub.log.log(ProjectDeveloper.name, \"applyChanges\", JSON.stringify(this.recentPatch));\n\n      this.describe(); //TODO: render on screen\n    }\n\n    describe() {\n      return JSON.stringify(this.am_diagram, undefined, 2);\n    }\n\n  }\n\n  ProjectDeveloper.ɵfac = function ProjectDeveloper_Factory(t) {\n    return new (t || ProjectDeveloper)(i0.ɵɵinject(i1.CoUmlHubService));\n  };\n\n  ProjectDeveloper.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjectDeveloper,\n    factory: ProjectDeveloper.ɵfac\n  });\n  return ProjectDeveloper;\n})();","map":null,"metadata":{},"sourceType":"module"}